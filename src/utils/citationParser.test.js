/**
 * Citation Classification Test
 * „ÉÜ„Çπ„ÉàÁî®„ÅÆÂºïÁî®ÊñáÁåÆ„Éá„Éº„Çø - Ë®ò‰∫ã„ÄÅÊõ∏Á±ç„ÄÅÊõ∏Á±ç„ÅÆÁ´†„ÅÆÂàÜÈ°ûÊ§úË®º
 */

import { parseLiterature } from './citationParser';

describe('Citation Classification Tests', () => {
  // „ÉÜ„Çπ„Éà„Éá„Éº„Çø: Ë®ò‰∫ã
  const journalArticles = [
    // Ëã±Ë™ûË´ñÊñá
    {
      citation: "Smith, J. (2020). Machine learning in healthcare. Journal of Medical Research, 45(3), 123-145.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    },
    {
      citation: "Brown, A., & Johnson, M. (2019). Climate change impacts on biodiversity. Nature Climate Change, 9, 876-882.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    },
    {
      citation: "Chen, L., Davis, R., & Wilson, K. (2021). Deep learning for image recognition. IEEE Transactions on Pattern Analysis and Machine Intelligence, 43(8), 2755-2770.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    },
    
    // Êó•Êú¨Ë™ûË´ñÊñá
    {
      citation: "Áî∞‰∏≠Â§™ÈÉé (2020). ‰∫∫Â∑•Áü•ËÉΩ„ÅÆÊïôËÇ≤ÂøúÁî®„Å´Èñ¢„Åô„ÇãÁ†îÁ©∂. ÊïôËÇ≤ÊÉÖÂ†±Á†îÁ©∂, 35(4), 15-28.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    },
    {
      citation: "‰ΩêËó§Ëä±Â≠ê„ÉªÂ±±Áî∞Ê¨°ÈÉé (2019). ÊåÅÁ∂öÂèØËÉΩ„Å™Á§æ‰ºö„ÅÆÊßãÁØâ„Å´Âêë„Åë„ÅüÁí∞Â¢ÉÊïôËÇ≤„ÅÆÂΩπÂâ≤. Áí∞Â¢ÉÊïôËÇ≤Â≠¶Á†îÁ©∂, 28(2), 45-60.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    },
    {
      citation: "Èà¥Êú®‰∏ÄÈÉé (2021). „Äå„Ç≥„É≠„ÉäÁ¶ç„Å´„Åä„Åë„ÇãÂ§ßÂ≠¶ÊïôËÇ≤„ÅÆ„Éá„Ç∏„Çø„É´Âåñ„Äç„ÄéÈ´òÁ≠âÊïôËÇ≤Á†îÁ©∂„ÄèÁ¨¨24Â∑ªÁ¨¨3Âè∑, 89-104È†Å.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    },
    // Â∑ª„Å®„Éö„Éº„Ç∏Áï™Âè∑„ÇíÊåÅ„Å§Ë®ò‰∫ãÔºàÊõ∏Á±çÁ´†„Å®Ë™§Âà§ÂÆö„Åï„Çå„ÇÑ„Åô„ÅÑ„Éë„Çø„Éº„É≥Ôºâ
    {
      citation: "ÂùÇÈÉ®Ââµ‰∏Ä, Â±±Â¥éÁßÄÂ§´ (2019). „Ç§„É≥„Çø„Éº„Éç„ÉÉ„ÉàÂà©Áî®„ÅåÊñ∞Âûã„ÅÜ„Å§ÂÇæÂêë„Å∏Âèä„Åº„ÅôÊÇ™ÂΩ±Èüø„Å®‰∫àÈò≤Á≠ñ„ÅÆÁ∏¶Êñ≠Á†îÁ©∂. „Ç≠„É£„É™„Ç¢ÊïôËÇ≤Á†îÁ©∂, 33, 139-146.",
      expected: { isBook: false, isBookChapter: false, type: "journal article" }
    }
  ];

  // „ÉÜ„Çπ„Éà„Éá„Éº„Çø: Êõ∏Á±ç
  const books = [
    // Ëã±Ë™ûÊõ∏Á±ç
    {
      citation: "Johnson, M. (2020). The Future of Artificial Intelligence. New York: Academic Press.",
      expected: { isBook: true, isBookChapter: false, type: "book" }
    },
    {
      citation: "Brown, S., & Wilson, R. (2019). Climate Science: A Global Perspective (3rd ed.). London: Cambridge University Press.",
      expected: { isBook: true, isBookChapter: false, type: "book" }
    },
    {
      citation: "Davis, A. (2021). Machine Learning Fundamentals. San Francisco: Tech Publishers, 450 pages.",
      expected: { isBook: true, isBookChapter: false, type: "book" }
    },
    
    // Êó•Êú¨Ë™ûÊõ∏Á±ç
    {
      citation: "Áî∞‰∏≠Â§™ÈÉé (2020). „Äé‰∫∫Â∑•Áü•ËÉΩ„Å®Á§æ‰ºö„ÄèÊù±‰∫¨: Â≠¶Ë°ìÂá∫ÁâàÁ§æ.",
      expected: { isBook: true, isBookChapter: false, type: "book" }
    },
    {
      citation: "‰ΩêËó§Ëä±Â≠ê (2019). „ÄéÁí∞Â¢ÉÊïôËÇ≤„ÅÆÁêÜË´ñ„Å®ÂÆüË∑µ„Äè(Á¨¨2Áâà) ‰∫¨ÈÉΩ: ÊïôËÇ≤Êõ∏Êàø, 320È†Å.",
      expected: { isBook: true, isBookChapter: false, type: "book" }
    },
    {
      citation: "Â±±Áî∞Ê¨°ÈÉé„ÉªÈà¥Êú®‰∏ÄÈÉé (2021). „Äé„Ç≥„É≠„ÉäÊôÇ‰ª£„ÅÆÊïôËÇ≤ÊîπÈù©„Äè Â§ßÈò™: Êú™Êù•Âá∫Áâà.",
      expected: { isBook: true, isBookChapter: false, type: "book" }
    }
  ];

  // „ÉÜ„Çπ„Éà„Éá„Éº„Çø: Êõ∏Á±ç„ÅÆÁ´†
  const bookChapters = [
    // Ëã±Ë™ûÊõ∏Á±ç„ÅÆÁ´†
    {
      citation: "Hall, S. (1980). Encoding/decoding. In Culture, Media, Language, 128‚Äì138.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    {
      citation: "Smith, J. (2020). Machine learning in education. In A. Brown (Ed.), Technology and Learning (pp. 45-67). New York: Academic Press.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    {
      citation: "Wilson, R., & Davis, M. (2019). Climate adaptation strategies. In Climate Change and Society (Ch. 8, pp. 156-178). London: Environmental Press.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    {
      citation: "Johnson, A. (2021). Deep learning fundamentals. In Neural Networks and AI (Chapter 3). San Francisco: Tech Books.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    {
      citation: "Chen, L. (2020). Data analysis techniques. In M. Taylor & R. Johnson (Eds.), Research Methods in Computer Science (Vol. 2, pp. 89-112). Boston: MIT Press.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    
    // Êó•Êú¨Ë™ûÊõ∏Á±ç„ÅÆÁ´†
    {
      citation: "Áî∞‰∏≠Â§™ÈÉé (2020). ‰∫∫Â∑•Áü•ËÉΩ„ÅÆÂÄ´ÁêÜÁöÑË™≤È°å. ‰ΩêËó§Ëä±Â≠êÁ∑®„ÄéAIÁ§æ‰ºöË´ñ„ÄèÁ¨¨3Á´†, 45-68È†Å, Êù±‰∫¨: Â≠¶Ë°ìÂá∫ÁâàÁ§æ.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    {
      citation: "Â±±Áî∞Ê¨°ÈÉé (2019). Áí∞Â¢ÉÊïôËÇ≤„ÅÆÂÆüË∑µ‰∫ã‰æã. „ÄéÊåÅÁ∂öÂèØËÉΩ„Å™Á§æ‰ºö„Å®ÊïôËÇ≤„ÄèÊâÄÂèé, 123-145È†Å, ‰∫¨ÈÉΩ: ÊïôËÇ≤Êõ∏Êàø.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    },
    {
      citation: "Èà¥Êú®‰∏ÄÈÉé (2021). „Éá„Ç∏„Çø„É´ÊïôËÇ≤„ÅÆÂèØËÉΩÊÄß„Å®Ë™≤È°å. Áî∞‰∏≠Â§™ÈÉé„Éª‰ΩêËó§Ëä±Â≠êÁ∑®„Äé„Ç≥„É≠„ÉäÊôÇ‰ª£„ÅÆÊïôËÇ≤„ÄèÁ¨¨5Á´†, 89-110È†Å, Â§ßÈò™: Êú™Êù•Âá∫Áâà.",
      expected: { isBook: false, isBookChapter: true, type: "book chapter" }
    }
  ];

  describe('Journal Articles Classification', () => {
    journalArticles.forEach((test, index) => {
      it(`should correctly classify journal article ${index + 1}: ${test.expected.type}`, () => {
        const result = parseLiterature(test.citation);
        
        expect(result.isBook).toBe(test.expected.isBook);
        expect(result.isBookChapter).toBe(test.expected.isBookChapter);
        
        console.log(`üì∞ ${index + 1}. Testing: ${test.citation}`);
        console.log(`   Expected: isBook=${test.expected.isBook}, isBookChapter=${test.expected.isBookChapter}`);
        console.log(`   Actual:   isBook=${result.isBook}, isBookChapter=${result.isBookChapter}`);
      });
    });
  });

  describe('Books Classification', () => {
    books.forEach((test, index) => {
      it(`should correctly classify book ${index + 1}: ${test.expected.type}`, () => {
        const result = parseLiterature(test.citation);
        
        expect(result.isBook).toBe(test.expected.isBook);
        expect(result.isBookChapter).toBe(test.expected.isBookChapter);
        
        console.log(`üìö ${index + 1}. Testing: ${test.citation}`);
        console.log(`   Expected: isBook=${test.expected.isBook}, isBookChapter=${test.expected.isBookChapter}`);
        console.log(`   Actual:   isBook=${result.isBook}, isBookChapter=${result.isBookChapter}`);
      });
    });
  });

  describe('Book Chapters Classification', () => {
    bookChapters.forEach((test, index) => {
      it(`should correctly classify book chapter ${index + 1}: ${test.expected.type}`, () => {
        const result = parseLiterature(test.citation);
        
        expect(result.isBook).toBe(test.expected.isBook);
        expect(result.isBookChapter).toBe(test.expected.isBookChapter);
        
        console.log(`üìñ ${index + 1}. Testing: ${test.citation}`);
        console.log(`   Expected: isBook=${test.expected.isBook}, isBookChapter=${test.expected.isBookChapter}`);
        console.log(`   Actual:   isBook=${result.isBook}, isBookChapter=${result.isBookChapter}`);
      });
    });
  });

  describe('Classification Summary', () => {
    it('should provide overall test statistics', () => {
      const allTests = [...journalArticles, ...books, ...bookChapters];
      let passedTests = 0;
      
      allTests.forEach((test) => {
        const result = parseLiterature(test.citation);
        const passed = result.isBook === test.expected.isBook && 
                       result.isBookChapter === test.expected.isBookChapter;
        if (passed) passedTests++;
      });
      
      const totalTests = allTests.length;
      const successRate = ((passedTests / totalTests) * 100).toFixed(1);
      
      console.log('\n=====================================');
      console.log('üèÅ Test Summary:');
      console.log(`   Total Tests: ${totalTests}`);
      console.log(`   Passed: ${passedTests}`);
      console.log(`   Failed: ${totalTests - passedTests}`);
      console.log(`   Success Rate: ${successRate}%`);
      console.log('=====================================');
      
      // Expect at least 80% success rate
      expect(passedTests / totalTests).toBeGreaterThanOrEqual(0.8);
    });
  });
});